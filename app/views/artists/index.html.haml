%p#notice= notice
- model_class = Artist
.page-header
  %h1=t '.title', default: model_class.model_name.human.pluralize.titleize

=form_tag artists_path, :method => 'get' do
  %p
    =text_field_tag :search, params[:search], class: 'text_field'
    =submit_tag "Search", class: 'btn btn-default', :name => nil

%table.table.table-striped
  %thead
    %tr
      %th= model_class.human_attribute_name(:name)
      %th= model_class.human_attribute_name(:albums)
      %th= model_class.human_attribute_name(:genre)
      %th= model_class.human_attribute_name(:start)
      %th= model_class.human_attribute_name(:bio)
      %th=t '.actions', default: t("helpers.actions")
  %tbody
    - @artists.each do |artist|
      %tr
        %td= artist.name
        %td= artist.albums.map(&:name).join(",<br>").html_safe
        %td= artist.genre
        %td= artist.start
        %td= artist.bio
        %td
          = link_to artist_path(artist), class: 'btn btn-xs', title: "#{ t('.show', default: t('helpers.links.show')) }" do
            = glyph 'info-sign'
          = link_to edit_artist_path(artist), class: 'btn btn-xs', title: "#{ t('.edit', default: t('helpers.links.edit')) }" do
            = glyph 'pencil'
          = link_to artist_path(artist), method: :delete, data: { confirm: t('.confirm', default: t("helpers.links.confirm", default: 'Are you sure? Any albums or songs created by this artist will also be deleted.')) }, class: 'btn btn-xs', title: "#{ t('.destroy', default: t('helpers.links.destroy')) }" do
            = glyph 'remove'

= link_to t('.new', default: t("helpers.links.new")), new_artist_path, class: 'btn btn-default'
.centre
  = will_paginate @artists